openapi: 3.0.3
info:
  version: "1.0.0"
  title: Club Events API
  description: API supporting scheduling and supporting club events. This includes creation of an event, joining and event, assigning event leaders, updating details, etc.
paths:
  /event:
    put:
      summary: Create a new event
      description: Creates new event if not already exits
      operationId: createEvent
      requestBody:
        $ref: '#/components/requestBodies/CreateEventBody'
      responses:
        '200':
          description: Event created Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/creator'
      security:
        - cognito-user-pool-authorizer: [ ]
      x-amazon-apigateway-integration:
        payloadFormatVersion: "1.0"
        type: "aws_proxy"
        httpMethod: "POST"
        timeoutInMillis: 5000
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:072103297669:function:create-event/invocations"
        connectionType: "INTERNET"
components:
  securitySchemes:
    cognito-user-pool-authorizer:
      type: "oauth2"
      flows: { }
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization"
        jwtConfiguration:
          audience:
            - "rowers"
            - "sailors"
          issuer: "https://cognito-idp.eu-west-1.amazonaws.com/eu-west-1_7DSlJxCrB"
        type: "jwt"
  requestBodies:
    CreateEventBody:
      description: Parameters of create event
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                $ref: '#/components/schemas/title'
              destination:
                $ref: '#/components/schemas/destination'
              description:
                $ref: '#/components/schemas/description'
              creator:
                $ref: '#/components/schemas/creator'
              start:
                $ref: '#/components/schemas/start'
              end:
                $ref: '#/components/schemas/end'
              launch:
                $ref: '#/components/schemas/launch'
              retrieval:
                $ref: '#/components/schemas/retrieval'
              tidePeak:
                $ref: '#/components/schemas/tidePeak'
              tideDirection:
                $ref: '#/components/schemas/tideDirection'
  schemas:
    title:
      type: string
    destination:
      type: string
    description:
      type: string
    creator:
      type: string
    start:
      type: string
      format: date-time
    end:
      type: string
      format: date-time
    launch:
      type: string
      format: date-time
    retrieval:
      type: string
      format: date-time
    tidePeak:
      type: string
      format: date-time
    tideDirection:
      type: string
      enum:
        - out
        - in
        - high
        - low
x-amazon-apigateway-cors:
    allowMethods:
      - "GET"
      - "OPTIONS"
      - "POST"
      - "PUT"
    maxAge: 0
    allowCredentials: false
    allowOrigins:
      - "*"
x-amazon-apigateway-importexport-version: "1.0"